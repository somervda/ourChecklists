rules_version='2';

service cloud.firestore {
  match /databases/{database}/documents {

    // **************  Reusable functions ********************
    // test
    function isAuthenticated() {
      return request.auth.uid !=null;
    }

    function isAdmin() {
       return isAuthenticated() &&
          ("isAdmin" in get( /databases/$(database)/documents/users/$(request.auth.uid)).data) &&
          get( /databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
     }

    function isActivated() {
       return isAuthenticated() &&
          ("isActivated" in get( /databases/$(database)/documents/users/$(request.auth.uid)).data) &&
          get( /databases/$(database)/documents/users/$(request.auth.uid)).data.isActivated == true;
     }

    function isTeamManager() {
       return isAuthenticated() &&
          ("managerOfTeams" in get( /databases/$(database)/documents/users/$(request.auth.uid)).data) &&
          get( /databases/$(database)/documents/users/$(request.auth.uid)).data.managerOfTeams.size() != 0;
     }

    function updatingField(field) {
      // Check to see if named field is being updated
      return (field in request.resource.data) && resource.data[field] != request.resource.data[field];
    }

    function isUserTeamsUpdate() {
       // Check that only voting  properties are being updated
       return (!updatingField("uid") 
        && !updatingField("email") 
        && !updatingField("photoURL") 
        && !updatingField("displayName") 
        && !updatingField("dateCreated") 
        && !updatingField("isAdmin") 
        && !updatingField("isActivated") 
        && !updatingField("dateLastLogon") 
        && !updatingField("canCreateTeams") 
       ) ;
     }


    // ****** Document Access functionsnp

    // user document rules (Delete not allowed)
    // Changed to allow users to see other user documents
    // so  listing of team members works

      match /users/{user} {
          allow read :  if isAdmin() 
                          ||
                          isAuthenticated()  ;
          allow  create:  if isAuthenticated() &&
                             user==request.auth.uid ;
          allow update: if (
                              isAdmin() &&
                              user!=request.auth.uid 
                            )
                          ||
                            (
                              isAuthenticated() &&
                              user==request.auth.uid &&
                              !updatingField("isAdmin") &&
                              !updatingField("canCreateTeams") &&
                              !updatingField("isActivated") 
                            ) 
                          ||
                            (
                              isTeamManager() &&
                              isUserTeamsUpdate()
                            );
    }

    match /{path=**}/teams/{did} {
      allow read:  if isActivated();
      allow write:  if isAdmin();
    }

    match /{path=**}/categories/{cid} {
      allow read:  if isActivated();
      allow write:  if isAdmin();
    }

    match /{path=**}/categories/{cid}/activities/{aid} {
      allow read:  if isActivated();
      allow write:  if isAdmin();
    }
  }
}